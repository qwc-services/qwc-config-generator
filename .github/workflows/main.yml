name: build

on: [push]

jobs:

    test:
      runs-on: ubuntu-latest
      steps:

      - uses: actions/checkout@master

      - name: Checkout qwc-docker
        uses: actions/checkout@master
        with:
          repository: qwc-services/qwc-docker
          path: qwc-docker

      - name: Start demo database and QGIS server
        run: |
          cd qwc-docker
          cp pg_service.conf pg_service_local.conf
          sed -i 's|host=qwc-postgis|host=localhost|g' pg_service_local.conf
          sed -i 's|port=5432|port=5439|g' pg_service_local.conf
          sed -i -e 's|# ports:|ports:|g' -e 's|#   - "127.0.0.1|  - "127.0.0.1|g' docker-compose-example.yml
          sed -Ei "s|^(\s*POSTGRES_PASSWORD:).*$|\1 'waej7WuoOoth0wor'|" docker-compose-example.yml
          docker compose -f docker-compose-example.yml up -d qwc-postgis qwc-config-db-migrate qwc-qgis-server

      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.12'

      - name: Run unittests
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          PGSERVICEFILE=$PWD/qwc-docker/pg_service_local.conf PYTHONPATH=$PWD/src python3 test.py

      - name: Validate schema
        run: |
          python -m pip install check-jsonschema
          check-jsonschema --check-metaschema schemas/qwc-ogc-service.json

    build:
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      steps:

      - uses: actions/checkout@master

      - name: Get version tag
        id: get_tag
        run: |
          echo "tag=${GITHUB_REF:10}" >>$GITHUB_OUTPUT
          if [ ${{ endsWith(github.ref, '-lts') }} = true ]; then
            echo "tag_latest=latest-lts,latest-${GITHUB_REF:11:4}-lts" >>$GITHUB_OUTPUT
          else
            echo "tag_latest=latest" >>$GITHUB_OUTPUT
          fi

      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@v5
        if: github.event_name != 'pull_request'
        with:
          name: sourcepole/${{ github.event.repository.name }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tags: "${{ steps.get_tag.outputs.tag }},${{ steps.get_tag.outputs.tag_latest }}"
